name: Build & Test

on:
  push:
    branches:
      - master

## Build ##

jobs:
  windows:
    name: Build on Windows
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - id: build
      run: |
        cd ${{ github.workspace }}
        mkdir build
        cd build
        git describe --tags --abbrev=0 --match "v*"
        cmake -DWITH_PYTHON=OFF ..
        cmake --build . --target dpsim

  linux-fedora:
    name: Build on Fedora Linux
    runs-on: ubuntu-latest
    container: sogno/dpsim:dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create Build Environment
      run: mkdir build

    - name: Configure CMake
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake $GITHUB_WORKSPACE

    - name: Build every target
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake --build .
      env:
        MAKEFLAGS: "-j2"

    - name: Cache build directory
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/build
        key: build-cache-fedora-${{ github.sha }}

  linux-fedora-minimal:
    name: Build with minimal configuration on Fedora Linux
    runs-on: ubuntu-latest
    container: sogno/dpsim:dev-minimal
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create Build Environment
      run: mkdir build

    - name: Configure CMake
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake -DWITH_SPDLOG_SUBMODULE=ON $GITHUB_WORKSPACE

    - name: Build every target
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake --build .
      env:
        MAKEFLAGS: "-j2"

    - name: Cache build directory
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/build
        key: build-cache-fedora-${{ github.sha }}

  linux-centos:
    name: Build on CentOS Linux
    runs-on: ubuntu-latest
    container: sogno/dpsim:dev-centos
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Create Build Environment
      run: mkdir build

    - name: Configure CMake
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake $GITHUB_WORKSPACE -DWITH_SPDLOG_SUBMODULE=ON

    - name: Build every target
      shell: bash
      working-directory: ${{ github.workspace }}/build
      run: cmake --build .
      env:
        MAKEFLAGS: "-j2"

    - name: Cache build directory
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/build
        key: build-cache-centos-${{ github.sha }}

## Tests ##

  test-binaries:
    name: Execute Example
    runs-on: ubuntu-latest
    container: sogno/dpsim:dev-centos
    needs: [linux-centos]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Restore Cache
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/build
        key: build-cache-centos-${{ github.sha }}

    - name: Run Binaries
      run: ./build/Examples/Cxx/WSCC_9bus_mult_coupled

  cpp-check:
    name: Scan Sourcecode with Cppcheck
    runs-on: ubuntu-latest
    container: sogno/dpsim:dev-centos
    needs: [linux-centos]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Run checks
      run: cppcheck --max-configs=32 -j2 --error-exitcode=1 -q --enable=warning,performance,portability,information,missingInclude --std=c++11 -I Include/ -I models/Include/ Source/ Examples/ models/Source/
