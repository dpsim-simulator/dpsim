# This Dockerfile is used to build Python wheels for uploading
# binary releases of DPsim to PyPi.org
#
# See: https://github.com/pypa/manylinux

FROM quay.io/pypa/manylinux_2_28_x86_64

ENV PLAT=manylinux_2_28_x86_64

LABEL \
	org.label-schema.schema-version = "1.0.0" \
	org.label-schema.name = "DPsim" \
	org.label-schema.license = "MPL 2.0" \
	org.label-schema.url = "http://dpsim.fein-aachen.org/" \
	org.label-schema.vcs-url = "https://github.com/sogno-platform/dpsim"

RUN dnf -y update
RUN yum install -y epel-release

# Toolchain
RUN yum install -y \
	gcc gcc-c++ clang \
	git \
	rpmdevtools rpm-build \
	make cmake pkgconfig \
	python3-pip \
	cppcheck

# Tools needed for developement
RUN dnf -y install \
	doxygen graphviz \
	gdb \
	procps-ng

# Dependencies
RUN dnf --refresh -y install \
	python3-devel \
	eigen3-devel \
	libxml2-devel \
	graphviz-devel

RUN yum install -y fmt-devel

# Install some debuginfos
RUN dnf -y debuginfo-install \
	python3

# Build & Install sundials
RUN cd /tmp && \
	git clone --recursive https://github.com/LLNL/sundials.git && \
	mkdir -p sundials/build && cd sundials/build && \
	git checkout v3.2.1 && \
	cmake -DCMAKE_BUILD_TYPE=Release ..  && \
	make -j$(nproc) install

# CIMpp and VILLAS are installed here
ENV LD_LIBRARY_PATH="/usr/local/lib64:${LD_LIBRARY_PATH}"

# Python dependencies
ADD requirements-manylinux.txt .
RUN pip3 install --upgrade wheel build
RUN pip3 install -r requirements-manylinux.txt

# Install CIMpp from source
RUN cd /tmp && \
	git clone --recursive https://github.com/cim-iec/libcimpp.git && \
	mkdir -p libcimpp/build && cd libcimpp/build && \
	cmake -DCMAKE_INSTALL_LIBDIR=/usr/local/lib64 -DUSE_CIM_VERSION=CGMES_2.4.15_16FEB2016 -DBUILD_SHARED_LIBS=ON -DBUILD_ARABICA_EXAMPLES=OFF .. && make -j$(nproc) install && \
	rm -rf /tmp/libcimpp

# villas dependencies
RUN yum install -y \
    openssl-devel \
    libuuid-devel \
    libcurl-devel \
    jansson-devel \
    libwebsockets-devel \
	mosquitto-devel \
	libconfig-devel \
  	libnl3-devel

# Install spdlog from source
RUN cd /tmp && \
	git clone --recursive https://github.com/gabime/spdlog.git && \
	cd spdlog && \
	git checkout tags/v1.6.1 && \
	mkdir -p build && cd build && \
	cmake -DCMAKE_POSITION_INDEPENDENT_CODE=True -DCMAKE_INSTALL_LIBDIR=/usr/local/lib64 .. && make -j$(nproc) install && \
	rm -rf /tmp/spdlog

# Install VILLAS from source
ENV LC_ALL C.UTF-8
ENV LANG C.UTF-8

RUN cd /tmp && \
	git -c submodule.fpga.update=none clone --recursive https://git.rwth-aachen.de/acs/public/villas/node.git villasnode && \	
	mkdir -p villasnode/build && cd villasnode/build && \
	git -c submodule.fpga.update=none checkout b94746effb015aa98791c0e319ef11223d18e8b0 && git -c submodule.fpga.update=none submodule update --recursive && \
	cmake -DCMAKE_INSTALL_LIBDIR=/usr/local/lib64 .. && make -j$(nproc) install && \
	rm -rf /tmp/villasnode